<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

<modelVersion>4.0.0</modelVersion>
<groupId>io.cryostat</groupId>
<artifactId>cryostat</artifactId>
<version>2.1.0-SNAPSHOT</version>
<packaging>jar</packaging>
<name>cryostat</name>
<url>http://maven.apache.org</url>

<properties>
  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  <java.version>11</java.version>
  <maven.compiler.target>${java.version}</maven.compiler.target>
  <maven.compiler.source>${java.version}</maven.compiler.source>

  <imageBuilder>/usr/bin/podman</imageBuilder>
  <baseImage>quay.io/cryostat/cryostat-base</baseImage>
  <baseImageTag>@sha256:2f9383116a556e1d5e431e58831e7eae40496eb72990595df2da0578a050b5b2</baseImageTag><!-- 0.3.0 -->
  <baseImageJdkVersion>java-11-openjdk-11.0.11.0.9-2.el8_4.x86_64</baseImageJdkVersion>
  <node.version>v14.17.0</node.version>
  <yarn.version>v1.22.13</yarn.version>

  <skipTests>false</skipTests>
  <skipITs>${skipTests}</skipITs>
  <skipUTs>${skipTests}</skipUTs>
  <cryostat.minimal>false</cryostat.minimal>
  <cryostat.imageStream>quay.io/cryostat/cryostat</cryostat.imageStream>
  <cryostat.entrypoint>/app/entrypoint.sh</cryostat.entrypoint>
  <cryostat.mainClass>io.cryostat.Cryostat</cryostat.mainClass>
  <cryostat.rjmxPort>9091</cryostat.rjmxPort>
  <cryostat.webPort>8181</cryostat.webPort>
  <cryostat.itest.webPort>8181</cryostat.itest.webPort>
  <cryostat.itest.webHost>localhost</cryostat.itest.webHost>
  <cryostat.itest.podName>cryostat-itests</cryostat.itest.podName>
  <cryostat.itest.containerName>cryostat-itest</cryostat.itest.containerName>
  <cryostat.itest.grafana.port>3000</cryostat.itest.grafana.port>
  <cryostat.itest.grafana.imageStream>quay.io/cryostat/cryostat-grafana-dashboard</cryostat.itest.grafana.imageStream>
  <cryostat.itest.grafana.version>1.0.0</cryostat.itest.grafana.version>
  <cryostat.itest.jfr-datasource.port>8080</cryostat.itest.jfr-datasource.port>
  <cryostat.itest.jfr-datasource.imageStream>quay.io/cryostat/jfr-datasource</cryostat.itest.jfr-datasource.imageStream>
  <cryostat.itest.jfr-datasource.version>1.0.0</cryostat.itest.jfr-datasource.version>

  <io.reactiverse.plugin.version>1.0.25</io.reactiverse.plugin.version>
  <org.apache.maven.plugins.compiler.version>3.8.1</org.apache.maven.plugins.compiler.version>
  <org.apache.maven.plugins.surefire.version>2.22.2</org.apache.maven.plugins.surefire.version>
  <org.apache.maven.plugins.failsafe.version>${org.apache.maven.plugins.surefire.version}</org.apache.maven.plugins.failsafe.version>
  <org.apache.maven.plugins.site.version>3.9.1</org.apache.maven.plugins.site.version>
  <org.apache.maven.plugins.info.reports.version>3.1.1</org.apache.maven.plugins.info.reports.version>
  <org.apache.maven.plugins.clean.version>3.1.0</org.apache.maven.plugins.clean.version>
  <org.apache.maven.plugins.resources.version>3.2.0</org.apache.maven.plugins.resources.version>
  <org.apache.maven.plugins.assembly.version>3.3.0</org.apache.maven.plugins.assembly.version>
  <com.github.eirslett.frontend.plugin.version>1.11.3</com.github.eirslett.frontend.plugin.version>
  <org.codehaus.mojo.exec.plugin.version>3.0.0</org.codehaus.mojo.exec.plugin.version>
  <com.mycila.license.maven.plugin.version>4.0</com.mycila.license.maven.plugin.version>
  <org.owasp.dependency.check.version>6.1.5</org.owasp.dependency.check.version>
  <com.google.cloud.tools.jib.maven.plugin.version>3.1.1</com.google.cloud.tools.jib.maven.plugin.version>

  <com.google.dagger.version>2.34.1</com.google.dagger.version>
  <com.google.dagger.compiler.version>2.26</com.google.dagger.compiler.version>

  <io.cryostat.core.version>2.3.1</io.cryostat.core.version>

  <org.apache.commons.lang3.version>3.12.0</org.apache.commons.lang3.version>
  <org.apache.commons.codec.version>1.15</org.apache.commons.codec.version>
  <org.apache.commons.validator.version>1.7</org.apache.commons.validator.version>
  <org.apache.commons.io.version>2.8.0</org.apache.commons.io.version>
  <org.apache.httpcomponents.version>4.5.13</org.apache.httpcomponents.version>
  <io.fabric8.client.version>5.4.1</io.fabric8.client.version>
  <io.vertx.web.version>3.9.9</io.vertx.web.version>
  <com.nimbusds.jose.jwt.version>9.15.2</com.nimbusds.jose.jwt.version>
  <org.bouncycastle.version>1.69</org.bouncycastle.version>
  <org.slf4j.version>1.7.30</org.slf4j.version>
  <com.google.code.gson.version>2.8.6</com.google.code.gson.version>
  <com.github.ben-manes.caffeine.version>3.0.1</com.github.ben-manes.caffeine.version>

  <com.github.spotbugs.version>4.2.3</com.github.spotbugs.version>
  <com.github.spotbugs.plugin.version>4.2.3</com.github.spotbugs.plugin.version>
  <org.junit.jupiter.version>5.7.1</org.junit.jupiter.version>
  <org.hamcrest.version>2.2</org.hamcrest.version>
  <org.mockito.version>3.9.0</org.mockito.version>
  <org.jacoco.maven.plugin.version>0.8.6</org.jacoco.maven.plugin.version>
  <com.diffplug.spotless.maven.plugin.version>2.10.1</com.diffplug.spotless.maven.plugin.version>
  <org.jsoup.version>1.14.2</org.jsoup.version>
</properties>

<dependencies>
  <dependency>
    <groupId>io.cryostat</groupId>
    <artifactId>cryostat-core</artifactId>
    <version>${io.cryostat.core.version}</version>
  </dependency>
  <dependency>
    <groupId>io.fabric8</groupId>
    <artifactId>openshift-client</artifactId>
    <version>${io.fabric8.client.version}</version>
  </dependency>
  <dependency>
    <groupId>io.fabric8</groupId>
    <artifactId>kubernetes-client</artifactId>
    <version>${io.fabric8.client.version}</version>
  </dependency>
  <dependency>
    <groupId>com.google.dagger</groupId>
    <artifactId>dagger</artifactId>
    <version>${com.google.dagger.version}</version>
  </dependency>
  <dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-lang3</artifactId>
    <version>${org.apache.commons.lang3.version}</version>
  </dependency>
  <dependency>
    <groupId>commons-codec</groupId>
    <artifactId>commons-codec</artifactId>
    <version>${org.apache.commons.codec.version}</version>
  </dependency>
  <dependency>
    <groupId>commons-io</groupId>
    <artifactId>commons-io</artifactId>
    <version>${org.apache.commons.io.version}</version>
  </dependency>
  <dependency>
    <groupId>commons-validator</groupId>
    <artifactId>commons-validator</artifactId>
    <version>${org.apache.commons.validator.version}</version>
  </dependency>
  <dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpclient</artifactId>
    <version>${org.apache.httpcomponents.version}</version>
  </dependency>
  <dependency>
    <groupId>io.vertx</groupId>
    <artifactId>vertx-web</artifactId>
    <version>${io.vertx.web.version}</version>
  </dependency>
  <dependency>
    <groupId>io.vertx</groupId>
    <artifactId>vertx-web-client</artifactId>
    <version>${io.vertx.web.version}</version>
  </dependency>
  <dependency>
    <groupId>com.nimbusds</groupId>
    <artifactId>nimbus-jose-jwt</artifactId>
    <version>${com.nimbusds.jose.jwt.version}</version>
  </dependency>
  <dependency>
    <groupId>org.bouncycastle</groupId>
    <artifactId>bcprov-jdk15on</artifactId>
    <version>${org.bouncycastle.version}</version>
  </dependency>
  <dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-jdk14</artifactId>
    <version>${org.slf4j.version}</version>
  </dependency>
  <dependency>
    <groupId>com.google.code.gson</groupId>
    <artifactId>gson</artifactId>
    <version>${com.google.code.gson.version}</version>
  </dependency>
  <dependency>
    <groupId>com.github.ben-manes.caffeine</groupId>
    <artifactId>caffeine</artifactId>
    <version>${com.github.ben-manes.caffeine.version}</version>
    <exclusions>
      <exclusion>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker-qual</artifactId>
      </exclusion>
      <exclusion>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
      </exclusion>
    </exclusions>
  </dependency>
  <dependency>
    <groupId>org.jsoup</groupId>
    <artifactId>jsoup</artifactId>
    <version>${org.jsoup.version}</version>
  </dependency>

  <!-- test deps -->
  <dependency>
    <groupId>org.junit.jupiter</groupId>
    <artifactId>junit-jupiter</artifactId>
    <version>${org.junit.jupiter.version}</version>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>org.hamcrest</groupId>
    <artifactId>hamcrest</artifactId>
    <version>${org.hamcrest.version}</version>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>org.mockito</groupId>
    <artifactId>mockito-junit-jupiter</artifactId>
    <version>${org.mockito.version}</version>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>org.mockito</groupId>
    <artifactId>mockito-inline</artifactId>
    <version>${org.mockito.version}</version>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>com.github.spotbugs</groupId>
    <artifactId>spotbugs-annotations</artifactId>
    <version>${com.github.spotbugs.version}</version>
    <scope>provided</scope>
  </dependency>
  <dependency>
    <groupId>io.fabric8</groupId>
    <artifactId>kubernetes-server-mock</artifactId>
    <version>${io.fabric8.client.version}</version>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>io.fabric8</groupId>
    <artifactId>openshift-server-mock</artifactId>
    <version>${io.fabric8.client.version}</version>
    <scope>test</scope>
  </dependency>
</dependencies>

<build>
  <plugins>
    <plugin>
      <groupId>io.reactiverse</groupId>
      <artifactId>vertx-maven-plugin</artifactId>
      <version>${io.reactiverse.plugin.version}</version>
      <configuration>
        <redeploy>true</redeploy>
        <launcher>io.cryostat.Cryostat</launcher>
      </configuration>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>${org.apache.maven.plugins.compiler.version}</version>
      <configuration>
        <forceJavacCompilerUse>true</forceJavacCompilerUse>
        <showDeprecation>true</showDeprecation>
        <showWarnings>true</showWarnings>
        <annotationProcessorPaths>
          <path>
            <groupId>com.google.dagger</groupId>
            <artifactId>dagger-compiler</artifactId>
            <version>${com.google.dagger.compiler.version}</version>
          </path>
        </annotationProcessorPaths>
      </configuration>
    </plugin>
    <plugin>
      <artifactId>maven-resources-plugin</artifactId>
      <version>${org.apache.maven.plugins.resources.version}</version>
      <executions>
        <execution>
          <id>copy-apidoc-resource</id>
          <phase>prepare-package</phase>
          <goals>
            <goal>copy-resources</goal>
          </goals>
          <configuration>
            <resources>
              <resource>
                <directory>${project.basedir}</directory>
                <includes>
                  <include>HTTP_API.md</include>
                </includes>
              </resource>
            </resources>
            <outputDirectory>${project.build.directory}/assets/app/resources/io/cryostat/net/web</outputDirectory>
          </configuration>
        </execution>
      </executions>
    </plugin>
    <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>exec-maven-plugin</artifactId>
      <version>${org.codehaus.mojo.exec.plugin.version}</version>
      <configuration>
        <mainClass>${cryostat.mainClass}</mainClass>
        <additionalClasspathElements>
          <additionalClasspathElement>${project.build.directory}/assets/app/resources</additionalClasspathElement>
        </additionalClasspathElements>
      </configuration>
      <executions>
        <execution>
          <id>generate-git-version</id>
          <phase>generate-resources</phase>
          <goals>
            <goal>exec</goal>
          </goals>
          <configuration>
            <executable>git</executable>
            <arguments>
              <argument>describe</argument>
              <argument>--dirty</argument>
              <argument>--long</argument>
              <argument>--always</argument>
            </arguments>
            <outputFile>${project.build.directory}/assets/app/resources/io/cryostat/version</outputFile>
          </configuration>
        </execution>
        <execution>
          <id>create-pod</id>
          <phase>pre-integration-test</phase>
          <goals>
            <goal>exec</goal>
          </goals>
          <configuration>
            <executable>${imageBuilder}</executable>
            <arguments>
              <argument>pod</argument>
              <argument>create</argument>
              <argument>--replace</argument>
              <argument>--name=${cryostat.itest.podName}</argument>
              <argument>--publish</argument>
              <argument>${cryostat.rjmxPort}:${cryostat.rjmxPort}</argument>
              <argument>--publish</argument>
              <argument>${cryostat.itest.webPort}:${cryostat.itest.webPort}</argument>
              <argument>--publish</argument>
              <argument>${cryostat.itest.jfr-datasource.port}:${cryostat.itest.jfr-datasource.port}</argument>
              <argument>--publish</argument>
              <argument>${cryostat.itest.grafana.port}:${cryostat.itest.grafana.port}</argument>
            </arguments>
            <skip>${skipITs}</skip>
          </configuration>
        </execution>
        <execution>
          <id>start-jfr-datasource</id>
          <phase>pre-integration-test</phase>
          <goals>
            <goal>exec</goal>
          </goals>
          <configuration>
            <executable>${imageBuilder}</executable>
            <arguments>
              <argument>run</argument>
              <argument>--pod=${cryostat.itest.podName}</argument>
              <argument>--name=jfr-datasource-itest</argument>
              <argument>--detach</argument>
              <argument>--rm</argument>
              <argument>${cryostat.itest.jfr-datasource.imageStream}:${cryostat.itest.jfr-datasource.version}</argument>
            </arguments>
            <skip>${skipITs}</skip>
          </configuration>
        </execution>
        <execution>
          <id>start-grafana</id>
          <phase>pre-integration-test</phase>
          <goals>
            <goal>exec</goal>
          </goals>
          <configuration>
            <executable>${imageBuilder}</executable>
            <arguments>
              <argument>run</argument>
              <argument>--pod=${cryostat.itest.podName}</argument>
              <argument>--name=grafana-itest</argument>
              <argument>--env</argument>
              <argument>GF_INSTALL_PLUGINS=grafana-simple-json-datasource</argument>
              <argument>--env</argument>
              <argument>GF_AUTH_ANONYMOUS_ENABLED=true</argument>
              <argument>--detach</argument>
              <argument>--rm</argument>
              <argument>${cryostat.itest.grafana.imageStream}:${cryostat.itest.grafana.version}</argument>
            </arguments>
            <skip>${skipITs}</skip>
          </configuration>
        </execution>
        <execution>
          <id>start-cryostat</id>
          <phase>pre-integration-test</phase>
          <goals>
            <goal>exec</goal>
          </goals>
          <configuration>
            <executable>${imageBuilder}</executable>
            <arguments>
              <argument>run</argument>
              <argument>--pod=${cryostat.itest.podName}</argument>
              <argument>--name=${cryostat.itest.containerName}</argument>
              <argument>--mount</argument>
              <argument>type=tmpfs,target=/opt/cryostat.d/conf.d</argument>
              <argument>--mount</argument>
              <argument>type=tmpfs,target=/opt/cryostat.d/templates.d</argument>
              <argument>--mount</argument>
              <argument>type=tmpfs,target=/opt/cryostat.d/recordings.d</argument>
              <argument>--mount</argument>
              <argument>type=tmpfs,target=/opt/cryostat.d/truststore.d</argument>
              <argument>--env</argument>
              <argument>CRYOSTAT_TARGET_CACHE_MAX_CONNECTIONS=1</argument>
              <argument>--env</argument>
              <argument>CRYOSTAT_TARGET_CACHE_TTL=5</argument>
              <argument>--env</argument>
              <argument>CRYOSTAT_DISABLE_JMX_AUTH=true</argument>
              <argument>--env</argument>
              <argument>CRYOSTAT_DISABLE_SSL=true</argument>
              <argument>--env</argument>
              <argument>CRYOSTAT_WEB_HOST=${cryostat.itest.webHost}</argument>
              <argument>--env</argument>
              <argument>CRYOSTAT_RJMX_PORT=9091</argument>
              <argument>--env</argument>
              <argument>CRYOSTAT_WEB_PORT=${cryostat.itest.webPort}</argument>
              <argument>--env</argument>
              <argument>CRYOSTAT_EXT_WEB_PORT=${cryostat.itest.webPort}</argument>
              <argument>--env</argument>
              <argument>CRYOSTAT_CONFIG_PATH=/opt/cryostat.d/conf.d</argument>
              <argument>--env</argument>
              <argument>CRYOSTAT_ARCHIVE_PATH=/opt/cryostat.d/recordings.d</argument>
              <argument>--env</argument>
              <argument>CRYOSTAT_TEMPLATE_PATH=/opt/cryostat.d/templates.d</argument>
              <argument>--env</argument>
              <argument>SSL_TRUSTSTORE_DIR=/opt/cryostat.d/truststore.d</argument>
              <argument>--env</argument>
              <argument>GRAFANA_DATASOURCE_URL=http://${cryostat.itest.webHost}:${cryostat.itest.jfr-datasource.port}</argument>
              <argument>--env</argument>
              <argument>GRAFANA_DASHBOARD_URL=http://${cryostat.itest.webHost}:${cryostat.itest.grafana.port}</argument>
              <argument>--detach</argument>
              <argument>--rm</argument>
              <argument>${cryostat.imageStream}:${cryostat.imageVersion}</argument>
            </arguments>
            <skip>${skipITs}</skip>
          </configuration>
        </execution>
        <execution>
          <id>wait-for-cryostat</id>
          <phase>pre-integration-test</phase>
          <goals>
            <goal>exec</goal>
          </goals>
          <configuration>
            <executable>timeout</executable>
            <arguments>
              <argument>5m</argument>
              <argument>sh</argument>
              <argument>-c</argument>
              <argument>until curl -sSk -o /dev/null http://${cryostat.itest.webHost}:${cryostat.itest.webPort}/health; do sleep 10; done</argument>
            </arguments>
            <skip>${skipITs}</skip>
          </configuration>
        </execution>
        <execution>
          <id>wait-for-jfr-datasource</id>
          <phase>pre-integration-test</phase>
          <goals>
            <goal>exec</goal>
          </goals>
          <configuration>
            <executable>timeout</executable>
            <arguments>
              <argument>5m</argument>
              <argument>sh</argument>
              <argument>-c</argument>
              <argument>until curl -sSk -o /dev/null http://${cryostat.itest.webHost}:${cryostat.itest.jfr-datasource.port}; do sleep 10; done</argument>
            </arguments>
            <skip>${skipITs}</skip>
          </configuration>
        </execution>
        <execution>
          <id>wait-for-grafana</id>
          <phase>pre-integration-test</phase>
          <goals>
            <goal>exec</goal>
          </goals>
          <configuration>
            <executable>timeout</executable>
            <arguments>
              <argument>5m</argument>
              <argument>sh</argument>
              <argument>-c</argument>
              <argument>until curl -sSk -o /dev/null http://${cryostat.itest.webHost}:${cryostat.itest.grafana.port}; do sleep 10; done</argument>
            </arguments>
            <skip>${skipITs}</skip>
          </configuration>
        </execution>
        <execution>
          <id>capture-oci-logs</id>
          <phase>post-integration-test</phase>
          <goals>
            <goal>exec</goal>
          </goals>
          <configuration>
            <executable>${imageBuilder}</executable>
            <arguments>
              <argument>logs</argument>
              <argument>${cryostat.itest.containerName}</argument>
            </arguments>
            <outputFile>${project.build.directory}/${cryostat.itest.containerName}-${maven.build.timestamp}.log</outputFile>
            <skip>${skipITs}</skip>
          </configuration>
        </execution>
        <execution>
          <id>destroy-pod</id>
          <phase>post-integration-test</phase>
          <goals>
            <goal>exec</goal>
          </goals>
          <configuration>
            <executable>${imageBuilder}</executable>
            <arguments>
              <argument>pod</argument>
              <argument>rm</argument>
              <argument>--force</argument>
              <argument>${cryostat.itest.podName}</argument>
            </arguments>
            <skip>${skipITs}</skip>
          </configuration>
        </execution>
      </executions>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>${org.apache.maven.plugins.surefire.version}</version>
      <configuration>
        <skipTests>${skipUTs}</skipTests>
        <trimStackTrace>false</trimStackTrace>
      </configuration>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-failsafe-plugin</artifactId>
      <version>${org.apache.maven.plugins.failsafe.version}</version>
      <executions>
        <execution>
          <id>failsafe-tests</id>
          <goals>
            <goal>integration-test</goal>
            <goal>verify</goal>
          </goals>
        </execution>
      </executions>
      <configuration>
        <skipTests>${skipTests}</skipTests>
        <skipITs>${skipITs}</skipITs>
        <runOrder>random</runOrder>
        <systemPropertyVariables>
          <cryostatWebPort>${cryostat.itest.webPort}</cryostatWebPort>
          <cryostatPodName>${cryostat.itest.podName}</cryostatPodName>
        </systemPropertyVariables>
      </configuration>
    </plugin>
    <plugin>
      <groupId>com.google.cloud.tools</groupId>
      <artifactId>jib-maven-plugin</artifactId>
      <version>${com.google.cloud.tools.jib.maven.plugin.version}</version>
      <executions>
        <execution>
          <id>build-oci-image</id>
          <phase>package</phase>
          <goals>
            <goal>dockerBuild</goal>
          </goals>
        </execution>
      </executions>
      <configuration>
        <dockerClient>
          <executable>${imageBuilder}</executable>
        </dockerClient>
        <from>
          <image>${baseImage}${baseImageTag}</image>
        </from>
        <to>
          <image>${cryostat.imageStream}</image>
          <tags>${cryostat.imageVersion}</tags>
        </to>
        <container>
          <format>OCI</format>
          <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
          <entrypoint>${cryostat.entrypoint}</entrypoint>
          <mainClass>${cryostat.mainClass}</mainClass>
          <ports>
            <port>${cryostat.webPort}</port>
            <port>${cryostat.rjmxPort}</port>
          </ports>
        </container>
        <extraDirectories>
          <paths>
            <path>
              ${project.build.directory}/assets
            </path>
            <path>
              <from>src/main/extras</from>
              <into>/</into>
              <excludes>
                <exclude>cryostat.jfc</exclude>
              </excludes>
            </path>
            <!-- FIXME remove this if/when Jib supports copying into symlinks -->
            <path>
              <from>src/main/extras</from>
              <into>/usr/lib/jvm/${baseImageJdkVersion}/lib/jfr</into>
              <includes>cryostat.jfc</includes>
            </path>
          </paths>
          <permissions>
            <permission>
              <file>${cryostat.entrypoint}</file>
              <mode>755</mode>
            </permission>
          </permissions>
        </extraDirectories>
      </configuration>
    </plugin>
    <plugin>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-maven-plugin</artifactId>
      <version>${com.github.spotbugs.plugin.version}</version>
      <executions>
        <execution>
          <id>spotbugs</id>
          <phase>verify</phase>
          <goals>
            <goal>check</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
    <plugin>
      <groupId>org.jacoco</groupId>
      <artifactId>jacoco-maven-plugin</artifactId>
      <version>${org.jacoco.maven.plugin.version}</version>
      <executions>
        <execution>
          <goals>
            <goal>prepare-agent</goal>
          </goals>
        </execution>
        <execution>
          <id>report</id>
          <phase>verify</phase>
          <goals>
            <goal>report</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
    <plugin>
      <groupId>com.diffplug.spotless</groupId>
      <artifactId>spotless-maven-plugin</artifactId>
      <version>${com.diffplug.spotless.maven.plugin.version}</version>
      <executions>
        <execution>
          <id>spotless</id>
          <phase>verify</phase>
          <goals>
            <goal>check</goal>
          </goals>
        </execution>
      </executions>
      <configuration>
        <java>
          <googleJavaFormat>
            <version>1.7</version>
            <style>AOSP</style>
          </googleJavaFormat>
          <trimTrailingWhitespace/>
          <endWithNewline/>
          <importOrder>
            <order>java,javax,org.openjdk.jmc,io.cryostat,</order>
          </importOrder>
          <removeUnusedImports/>
        </java>
      </configuration>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-site-plugin</artifactId>
      <version>${org.apache.maven.plugins.site.version}</version>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-project-info-reports-plugin</artifactId>
      <version>${org.apache.maven.plugins.info.reports.version}</version>
    </plugin>
    <plugin>
      <groupId>com.mycila</groupId>
      <artifactId>license-maven-plugin</artifactId>
      <version>${com.mycila.license.maven.plugin.version}</version>
      <configuration>
        <licenseSets>
          <licenseSet>
            <header>LICENSE</header>
            <includes>
              <include>src/main/**/*.java</include>
              <include>src/test/**/*.java</include>
            </includes>
          </licenseSet>
        </licenseSets>
      </configuration>
      <executions>
        <execution>
          <id>update-license</id>
          <goals>
            <goal>check</goal>
          </goals>
          <phase>process-sources</phase>
        </execution>
      </executions>
    </plugin>
  </plugins>
</build>

<reporting>
  <plugins>
    <plugin>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-maven-plugin</artifactId>
      <version>${com.github.spotbugs.plugin.version}</version>
    </plugin>
    <plugin>
      <groupId>org.jacoco</groupId>
      <artifactId>jacoco-maven-plugin</artifactId>
      <version>${org.jacoco.maven.plugin.version}</version>
      <configuration>
        <excludes>
          <exclude>**/*_Factory.*</exclude>
          <exclude>**/*_Provide*Factory.*</exclude>
          <exclude>**/Dagger*.*</exclude>
          <exclude>**/*Module_*Factory.*</exclude>
          <exclude>**/*Module.*</exclude>
        </excludes>
      </configuration>
      <reportSets>
        <reportSet>
          <reports>
            <report>report</report>
          </reports>
        </reportSet>
      </reportSets>
    </plugin>
  </plugins>
</reporting>

<profiles>
  <profile>
    <id>minimal</id>
    <activation>
      <property>
        <name>cryostat.minimal</name>
        <value>true</value>
      </property>
    </activation>
    <properties>
      <cryostat.imageVersion>${project.version}-minimal</cryostat.imageVersion>
    </properties>
    <build>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${org.apache.maven.plugins.failsafe.version}</version>
          <configuration>
            <systemPropertyVariables>
              <isMinimalBuild>true</isMinimalBuild>
            </systemPropertyVariables>
          </configuration>
        </plugin>
      </plugins>
    </build>
  </profile>
  <profile>
    <id>non-minimal</id>
    <activation>
      <property>
        <name>cryostat.minimal</name>
        <value>!true</value>
      </property>
    </activation>
    <properties>
      <cryostat.imageVersion>${project.version}</cryostat.imageVersion>
    </properties>
    <build>
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${org.apache.maven.plugins.clean.version}</version>
          <executions>
            <execution>
              <id>clean web-client</id>
              <phase>clean</phase>
              <goals>
                <goal>clean</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <filesets>
              <fileset>
                <directory>web-client</directory>
                <includes>
                    <include>node_modules/**</include>
                    <include>dist/**</include>
                </includes>
              </fileset>
              <fileset>
                <directory>bin</directory>
                <includes>
                  <include>node/**</include>
                </includes>
              </fileset>
            </filesets>
            <systemPropertyVariables>
              <isMinimalBuild>false</isMinimalBuild>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${com.github.eirslett.frontend.plugin.version}</version>
          <configuration>
            <workingDirectory>${project.basedir}/web-client</workingDirectory>
            <installDirectory>${project.basedir}/bin</installDirectory>
          </configuration>
          <executions>
            <execution>
              <id>install node and npm</id>
              <phase>initialize</phase>
              <goals>
                <goal>install-node-and-yarn</goal>
              </goals>
              <configuration>
                <nodeVersion>${node.version}</nodeVersion>
                <yarnVersion>${yarn.version}</yarnVersion>
              </configuration>
            </execution>
            <execution>
              <id>yarn install</id>
              <phase>initialize</phase>
              <goals>
                <goal>yarn</goal>
              </goals>
              <configuration>
                  <arguments>
                      install --frozen-lockfile
                  </arguments>
              </configuration>
            </execution>
            <execution>
              <id>yarn run build</id>
              <phase>compile</phase>
              <goals>
                <goal>yarn</goal>
              </goals>
              <configuration>
                <arguments>run build</arguments>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${org.apache.maven.plugins.resources.version}</version>
          <executions>
            <execution>
              <id>copy-web-client-resources</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <resources>
                  <resource>
                    <directory>web-client/dist</directory>
                    <excludes>
                      <exclude>cache/**/*</exclude>
                    </excludes>
                  </resource>
                </resources>
                <outputDirectory>${project.build.directory}/assets/app/resources/io/cryostat/net/web</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </build>
  </profile>
  <profile>
    <id>dist</id>
    <build>
      <plugins>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${org.apache.maven.plugins.assembly.version}</version>
          <configuration>
            <descriptors>
              <descriptor>src/assembly/dist.xml</descriptor>
            </descriptors>
            <tarLongFileMode>posix</tarLongFileMode>
          </configuration>
          <executions>
            <execution>
              <id>assemble-dist</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </build>
  </profile>
  <profile>
    <id>dep-check</id>
    <build>
      <plugins>
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>${org.owasp.dependency.check.version}</version>
          <configuration>
            <failBuildOnAnyVulnerability>true</failBuildOnAnyVulnerability>
          </configuration>
          <executions>
            <execution>
              <id>check-for-vulnerable-deps</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>validate</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </build>
  </profile>
</profiles>

</project>
