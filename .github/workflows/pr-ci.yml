name: CI build and push (PR)

concurrency:
  group: ci-${{ github.run_id }}
  cancel-in-progress: true

on:
  issue_comment:
    types:
      - created

jobs:
  check-before-build:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/build_test')
    steps:
    - name: Fail if needs-triage label applied
      if: ${{ contains(github.event.issue.labels.*.name, 'needs-triage') }}
      run: exit 1
    - name: Comment if safe-to-test label NOT applied
      uses: thollander/actions-comment-pull-request@v1
      if: ${{ !contains(github.event.issue.labels.*.name, 'safe-to-test') }}
      with:
        message: |-
          The safe-to-test label has not been applied. Please apply it yourself or ask a reviewer to apply it 
          before running the build_test command again. 
    - name: Fail if safe-to-test label NOT applied
      if: ${{ !contains(github.event.issue.labels.*.name, 'safe-to-test') }}
      run: exit 1
    - name: React to comment
      uses: actions/github-script@v4
      with:
        script: |
            const {owner, repo} = context.issue
            github.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: "+1",
            });  

  checkout-branch: 
    runs-on: ubuntu-latest
    needs: [check-before-build]
    permissions:
      contents: read
      issues: read
      pull-requests: read
    outputs: 
      PR_head_ref: ${{ steps.comment-branch.outputs.head_ref }}
      PR_head_sha: ${{ steps.comment-branch.outputs.head_sha }}
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/build_test')
    steps:
    - name: Get PR command branch
      uses: xt0rted/pull-request-comment-branch@v2
      id: comment-branch
    - name: Checkout PR command branch 
      uses: actions/checkout@v3
      with:
        ref: ${{ steps.comment-branch.outputs.head_ref }}
        repository: ${{ github.repository }}
    - run: git rev-parse --abbrev-ref HEAD
    - run: git rev-parse --verify HEAD

  code-analysis:
    needs: [checkout-branch]
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/build_test')
    uses: ./.github/workflows/ci-code-analysis.yml
    with:
      checkout-repo: ${{ github.repository }}
      checkout-ref: ${{ needs.checkout-branch.outputs.PR_head_ref }}
      
  build-and-test:
    needs: [code-analysis, checkout-branch]
    strategy:
      matrix:
        arch: [amd64, arm64]
    uses: ./.github/workflows/ci-build-image.yml
    with:
      build-arch: ${{ matrix.arch }}
      checkout-repo: ${{ github.repository }}
      checkout-ref: ${{ needs.checkout-branch.outputs.PR_head_ref  }}
      skip-itests: true
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/build_test')

  push-to-ghcr:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    outputs: 
      amd64_image: ${{ steps.amd64_image.outputs.image }}
      arm64_image: ${{ steps.arm64_image.outputs.image }}
    needs: [code-analysis, build-and-test, checkout-branch]
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/build_test')
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: cryostat-${{ matrix.arch }}
    - name: Load cryostat image
      run: podman load -i cryostat-${{ matrix.arch }}.tar
    - name: Tag cryostat image
      run: podman tag cryostat ghcr.io/${{ github.repository_owner }}/cryostat:pr-${{ github.event.number }}-${{ needs.checkout-branch.outputs.PR_head_sha }}-linux-${{ matrix.arch }}
    - name: Push PR test image to ghcr.io
      id: push-to-ghcr
      uses: redhat-actions/push-to-registry@v2
      with:
        image: cryostat
        tags: pr-${{ github.event.number }}-${{ needs.checkout-branch.outputs.PR_head_sha }}-linux-${{ matrix.arch }}
        registry: ghcr.io/${{ github.repository_owner }}
        username: ${{ github.event.issue_comment.comment.user.login }}
        password: ${{ secrets.GITHUB_TOKEN}}
    - name: Store images as output amd64
      if: ${{ matrix.arch }} == 'amd64'
      id: amd64_image
      run: echo "image=${{ steps.push-to-ghcr.outputs.registry-path }}" >> "$GITHUB_OUTPUT"
    - name: Store images as output
      if: ${{ matrix.arch }} == 'arm64'
      id: arm64_image
      run: echo "image=${{ steps.push-to-ghcr.outputs.registry-path }}" >> "$GITHUB_OUTPUT"

  comment-image:
    runs-on: ubuntu-latest
    needs: [push-to-ghcr]
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/build_test')
    steps:
    - name: Create markdown table
      uses: petems/csv-to-md-table-action@master
      id: md-table
      env:
        amd64_image: ${{ needs.push-to-ghcr.outputs.amd64_image }}
        arm64_image: ${{ needs.push-to-ghcr.outputs.arm64_image }}
      with: 
        csvinput: |
          ARCH, IMAGE
          AMD64, $amd64_image
          ARM64, $arm64_image
    - uses: thollander/actions-comment-pull-request@v1
      with:
        message: |-
          ${{ steps.md-table.outputs.markdown-table }}
          To run smoketest:
          ```
          CRYOSTAT_IMAGE=${PULL_REQUEST_IMAGE} sh smoketest.sh
          ```
