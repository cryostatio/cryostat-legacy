name: CI build and push

on:
  push:
    branches:
      - main
      - v[0-9]+
      - v[0-9]+.[0-9]+
      - cryostat-v[0-9]+.[0-9]+
  pull_request:
    branches:
      - main
      - v[0-9]+
      - v[0-9]+.[0-9]+
      - cryostat-v[0-9]+.[0-9]+

jobs:
  get-pom-properties:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: query-pom
      name: Get properties from POM
      # Query POM for core and image version and save as output parameter
      run: |
        CORE_VERSION="$(mvn help:evaluate -Dexpression=io.cryostat.core.version -q -DforceStdout)"
        echo "::set-output name=core-version::v$CORE_VERSION"
        IMAGE_VERSION="$(mvn validate help:evaluate -Dexpression=cryostat.imageVersionLower -q -DforceStdout)"
        echo "::set-output name=image-version::$IMAGE_VERSION"
    outputs:
      core-version: ${{ steps.query-pom.outputs.core-version }}
      image-version: ${{ steps.query-pom.outputs.image-version }}

  build-deps:
    runs-on: ubuntu-latest
    needs: [get-pom-properties]
    steps:
    - uses: actions/checkout@v2
      with:
        repository: cryostatio/cryostat-core
        ref: ${{ needs.get-pom-properties.outputs.core-version }}
    - uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - run: mvn -B -U -DskipTests=true clean install
    - uses: actions/upload-artifact@v3
      with:
        name: cryostat-core
        path: /home/runner/.m2/repository/io/cryostat/cryostat-core/
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: save

  build-image:
    runs-on: ubuntu-latest
    needs: [get-pom-properties, build-deps]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
    - uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - uses: actions/download-artifact@v3
      with:
        name: cryostat-core
        path: /home/runner/.m2/repository/io/cryostat/cryostat-core/
    - run: git submodule init
    - run: git submodule update --remote
    - run: mvn -B -U clean package
    - name: Save cryostat image
      run: podman save -o cryostat.tar --format oci-archive quay.io/cryostat/cryostat
    - uses: actions/upload-artifact@v3
      with:
        name: cryostat
        path: /home/runner/work/cryostat/cryostat/cryostat.tar
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: save

  integration-tests:
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
    - uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - uses: actions/download-artifact@v3
      with:
        name: cryostat
    - name: Load cryostat image
      run: podman load -i cryostat.tar
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - name: Run integration tests
      run: POD_NAME=cryostat-itests CONTAINER_NAME=cryostat-itest bash repeated-integration-tests.bash
    - name: Print itest logs
      if: ${{ failure() }}
      run: ls -1dt target/cryostat-itests-*.log | head -n1 | xargs cat
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: save

  spotless:
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - name: Run spotless
      run: mvn spotless:check

  spotbugs:
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Run spotbugs
      run: mvn compile spotbugs:check

  shellcheck:
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
    - uses: actions/checkout@v2
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - name: Run shellcheck
      run: mvn shellcheck:check

  push-to-quay:
    runs-on: ubuntu-latest
    needs: [integration-tests, spotless, spotbugs, shellcheck]
    env:
      CRYOSTAT_IMG: quay.io/cryostat/cryostat
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: cryostat
    - name: Load cryostat image
      run: podman load -i cryostat.tar
    - name: Tag images
      id: tag-image
      env:
        IMAGE_VERSION: ${{ needs.get-pom-properties.outputs.image-version }}
      run: |
        if [ "$GITHUB_REF" == "refs/heads/main" ]; then
          podman tag \
          ${{ env.CRYOSTAT_IMG }}:$IMAGE_VERSION \
          ${{ env.CRYOSTAT_IMG }}:latest
          echo "::set-output name=tags::$IMAGE_VERSION latest"
        else
          echo "::set-output name=tags::$IMAGE_VERSION"
        fi
      if: ${{ github.event_name == 'push' && github.repository_owner == 'cryostatio' }}
    - name: Push to quay.io
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2
      with:
        image: cryostat
        tags: ${{ steps.tag-image.outputs.tags }}
        registry: quay.io/cryostat
        username: cryostat+bot
        password: ${{ secrets.REGISTRY_PASSWORD }}
      if: ${{ github.event_name == 'push' && github.repository_owner == 'cryostatio' }}
    - name: Print image URL
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
      if: ${{ github.event_name == 'push' && github.repository_owner == 'cryostatio' }}
