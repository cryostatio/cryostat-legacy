on:
  workflow_call:
    inputs:
      checkout-repo:
        required: false
        type: string
      checkout-ref:
        required: false
        type: string
    outputs:
      image-version:
        description: the Cryostat application version that will be built
        value: ${{ jobs.get-pom-properties.outputs.image-version }}

jobs:
  get-pom-properties:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.checkout-repo }}
        ref: ${{ inputs.checkout-ref }}
    - id: query-pom
      name: Get properties from POM
      # Query POM for image version and save as output parameter
      run: |
        IMAGE_VERSION="$(mvn validate help:evaluate -Dexpression=cryostat.imageVersionLower -q -DforceStdout)"
        echo "::set-output name=image-version::$IMAGE_VERSION"
    outputs:
      image-version: ${{ steps.query-pom.outputs.image-version }}

  build-image:
    runs-on: ubuntu-latest
    needs: [get-pom-properties]
    steps:
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.checkout-repo }}
        ref: ${{ inputs.checkout-ref }}
        submodules: true
        fetch-depth: 0
    - uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: maven-settings
      uses: s4u/maven-settings-action@v2
      with:
        servers: '[{"id": "github", "username": "dummy", "password": "${env.GITHUB_TOKEN_REF}"}]'
        githubServer: false
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - run: git submodule init
    - run: git submodule update --remote
    - run: mvn -B -U clean package
      env:
        GITHUB_TOKEN_REF: ${{ secrets.GH_PKGS_READ_TOKEN }}
    - name: Save cryostat image
      run: podman save -o cryostat.tar --format oci-archive quay.io/cryostat/cryostat
    - uses: actions/upload-artifact@v3
      with:
        name: cryostat
        path: /home/runner/work/cryostat/cryostat/cryostat.tar
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: save

  integration-tests:
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.checkout-repo }}
        ref: ${{ inputs.checkout-ref }}
        submodules: true
        fetch-depth: 0
    - uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - uses: actions/download-artifact@v3
      with:
        name: cryostat
    - name: Load cryostat image
      run: podman load -i cryostat.tar
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - name: Run integration tests
      run: POD_NAME=cryostat-itests CONTAINER_NAME=cryostat-itest ITEST_IMG_VERSION=latest bash repeated-integration-tests.bash
    - name: Print itest logs
      if: failure()
      run: ls -1dt target/cryostat-itest-*.log | head -n1 | xargs cat
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: save

  spotless:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.checkout-repo }}
        ref: ${{ inputs.checkout-ref }}
    - name: Run spotless
      run: mvn spotless:check

  spotbugs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.checkout-repo }}
        ref: ${{ inputs.checkout-ref }}
        submodules: true
        fetch-depth: 0
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: maven-settings
      uses: s4u/maven-settings-action@v2
      with:
        servers: '[{"id": "github", "username": "dummy", "password": "${env.GITHUB_TOKEN_REF}"}]'
        githubServer: false
    - name: Run spotbugs
      run: mvn -Dheadless=true compile spotbugs:check
      env:
        GITHUB_TOKEN_REF: ${{ secrets.GH_PKGS_READ_TOKEN }}

  shellcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.checkout-repo }}
        ref: ${{ inputs.checkout-ref }}
    - name: Run shellcheck
      run: mvn shellcheck:check
