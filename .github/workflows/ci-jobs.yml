on:
  workflow_call:

jobs:
  get-pom-properties:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: query-pom
      name: Get properties from POM
      # Query POM for core and image version and save as output parameter
      run: |
        CORE_VERSION="$(mvn help:evaluate -Dexpression=io.cryostat.core.version -q -DforceStdout)"
        echo "::set-output name=core-version::v$CORE_VERSION"
        IMAGE_VERSION="$(mvn validate help:evaluate -Dexpression=cryostat.imageVersionLower -q -DforceStdout)"
        echo "::set-output name=image-version::$IMAGE_VERSION"
    outputs:
      core-version: ${{ steps.query-pom.outputs.core-version }}
      image-version: ${{ steps.query-pom.outputs.image-version }}

  build-deps:
    runs-on: ubuntu-latest
    needs: [get-pom-properties]
    steps:
    - uses: actions/checkout@v2
      with:
        repository: cryostatio/cryostat-core
        ref: ${{ needs.get-pom-properties.outputs.core-version }}
    - uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - run: mvn -B -U -DskipTests=true clean install
    - uses: actions/upload-artifact@v3
      with:
        name: cryostat-core
        path: /home/runner/.m2/repository/io/cryostat/cryostat-core/
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: save

  build-image:
    runs-on: ubuntu-latest
    needs: [get-pom-properties, build-deps]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
    - uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - uses: actions/download-artifact@v3
      with:
        name: cryostat-core
        path: /home/runner/.m2/repository/io/cryostat/cryostat-core/
    - run: git submodule init
    - run: git submodule update --remote
    - run: mvn -B -U clean package
    - name: Save cryostat image
      run: podman save -o cryostat.tar --format oci-archive quay.io/cryostat/cryostat
    - uses: actions/upload-artifact@v3
      with:
        name: cryostat
        path: /home/runner/work/cryostat/cryostat/cryostat.tar
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: save

  integration-tests:
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
      if: github.repository_owner == 'cryostatio'
    - uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
      if: github.repository_owner == 'cryostatio'
    - uses: actions/download-artifact@v3
      with:
        name: cryostat
      if: github.repository_owner == 'cryostatio'
    - name: Load cryostat image
      run: podman load -i cryostat.tar
      if: github.repository_owner == 'cryostatio'
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
      if: github.repository_owner == 'cryostatio'
    - name: Run integration tests
      run: POD_NAME=cryostat-itests CONTAINER_NAME=cryostat-itest ITEST_IMG_VERSION=latest bash repeated-integration-tests.bash
      if: github.repository_owner == 'cryostatio' && contains(steps.pr-labels.outputs.labels, ' safe-to-test ')
    - name: Print itest logs
      if: failure()
      run: ls -1dt target/cryostat-itest-*.log | head -n1 | xargs cat
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: save
      if: github.repository_owner == 'cryostatio'

  spotless:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run spotless
      run: mvn spotless:check

  spotbugs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Run spotbugs
      run: mvn -Dheadless=true compile spotbugs:check

  shellcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run shellcheck
      run: mvn shellcheck:check
